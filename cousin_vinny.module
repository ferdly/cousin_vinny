<?php

/**
 * Example function.
 */

function _drush_execute_vin_collect($vin) {
    $buffer = '';
    $message = _vin_prevalidate($vin);
    $buffer .= "'" . $vin . "' was the argument provided/selected to function '" . __FUNCTION__ . "'. Message: " . $message;
  drush_print($buffer);
}

function _vin_prevalidate(&$vin){
    $vin = strtoupper($vin);
    $error_array = array();
    if (strlen($vin) !== 17) {
        $error_array[] = 'expected Lengh of 17 not met [' . strlen($vin) . ']';
    }
    if (!ctype_alnum($vin)) {
        $error_array[] = 'one or more non-AlphNum characters';
    }
    $vin_check = 'X' . $vin;
    $vin_ioq = strpos($vin_check, 'I') + strpos($vin_check, 'O') + strpos($vin_check, 'Q') + 0;
    if ($vin_ioq > 0) {
        $error_array[] = "one or more of invalid characters ['I','O','Q']";
    }

    if (count($error_array) > 0) {
        $message = 'Value does NOT meet common criteria of a VIN: ';
        $message .= implode('; ', $error_array) . '.';
    }else{
        $message = 'Value meets common criteria of a VIN.';
    }

    return $message;
}

function _query_nid_array() {
    $build_query_dbtng['main'] = "select nid from node";
    $build_query_dbtng['where'] = "1 = 1";
    $build_query_dbtng['limit'] = $arg == 'list' ? 1 : '';
    $build_query_dbtng['orderby'] = 'nid';
    $build_query_dbtng['direction'] = 'ASC';
    $build_query_dbtng['aggregate'] = '';

    if ($option['count'] + 0 > 0) {
        $limit = $option['count'] + 0;
        $build_query_dbtng['limit'] = 'LIMIT ' . $limit;
    }
    if (strlen($option['orderby'])) {
        #\_ would normally validate, but too much for demo
        $build_query_dbtng['orderby'] = 'ORDER BY ' . $option['orderby'];
    }
    if ($option['orderby-desc']) {
        $build_query_dbtng['direction'] = 'DESC';
    }
    if (strlen($option['content-types'])) {
        #\_ would normally validate and implode, but too much for demo
        $build_query_dbtng['where'] = 'WHERE content_type = ' . $option['content-types'];
    }
    if ($argument == 'groupby') {
        #\_ no options for demo
        $build_query_dbtng['aggregate'] = 'GROUP BY content_type';
    }
    if ($argument == 'cube') {
        #\_ no options for demo
        $build_query_dbtng['aggregate'] = 'CUBE content_type';
    }
}